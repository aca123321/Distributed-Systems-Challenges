2024-02-25 21:51:55,998{GMT}	INFO	[jepsen test runner] jepsen.core: Command line:
lein run test -w unique-ids --bin /Users/aca123321/go/bin/unique-id-generation --time-limit 30 --rate 1000 --node-count 3 --availability total --nemesis partition
2024-02-25 21:51:56,061{GMT}	INFO	[jepsen test runner] jepsen.core: Running test:
{:args []
 :remote
 #jepsen.control.retry.Remote{:remote #jepsen.control.scp.Remote{:cmd-remote #jepsen.control.sshj.SSHJRemote{:concurrency-limit 6,
                                                                                                             :conn-spec nil,
                                                                                                             :client nil,
                                                                                                             :semaphore nil},
                                                                 :conn-spec nil},
                              :conn nil}
 :log-net-send false
 :node-count 3
 :availability :total
 :max-txn-length 4
 :concurrency 3
 :db
 #object[maelstrom.db$db$reify__16142
         "0x5e05064b"
         "maelstrom.db$db$reify__16142@5e05064b"]
 :max-writes-per-key 16
 :leave-db-running? false
 :name "unique-ids"
 :logging-json? false
 :start-time
 #object[org.joda.time.DateTime "0x1d628a88" "2024-02-25T21:51:55.960+05:30"]
 :nemesis-interval 10
 :net
 #object[maelstrom.net$jepsen_net$reify__15251
         "0x3c634a04"
         "maelstrom.net$jepsen_net$reify__15251@3c634a04"]
 :client
 #object[maelstrom.workload.unique_ids$client$reify__20074
         "0x4b48be5c"
         "maelstrom.workload.unique_ids$client$reify__20074@4b48be5c"]
 :barrier
 #object[java.util.concurrent.CyclicBarrier
         "0x3fe8d57a"
         "java.util.concurrent.CyclicBarrier@3fe8d57a"]
 :log-stderr false
 :pure-generators true
 :ssh {:dummy? true}
 :rate 1000.0
 :checker
 #object[jepsen.checker$compose$reify__11881
         "0x36573ec5"
         "jepsen.checker$compose$reify__11881@36573ec5"]
 :argv
 ("test"
  "-w"
  "unique-ids"
  "--bin"
  "/Users/aca123321/go/bin/unique-id-generation"
  "--time-limit"
  "30"
  "--rate"
  "1000"
  "--node-count"
  "3"
  "--availability"
  "total"
  "--nemesis"
  "partition")
 :nemesis
 (jepsen.nemesis.ReflCompose
  {:fm {:start-partition 0,
        :stop-partition 0,
        :kill 1,
        :start 1,
        :pause 1,
        :resume 1},
   :nemeses [#unprintable "jepsen.nemesis.combined$partition_nemesis$reify__16416@10c26161"
             #unprintable "jepsen.nemesis.combined$db_nemesis$reify__16397@1ef6977b"]})
 :nodes ["n0" "n1" "n2"]
 :test-count 1
 :latency {:mean 0, :dist :constant}
 :bin "/Users/aca123321/go/bin/unique-id-generation"
 :generator
 (jepsen.generator.TimeLimit
  {:limit 30000000000,
   :cutoff nil,
   :gen (jepsen.generator.Any
         {:gens [(jepsen.generator.OnThreads
                  {:f #{:nemesis},
                   :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__9167
                                           "0x771c4015"
                                           "jepsen.generator.context$make_thread_filter$lazy_filter__9167@771c4015"],
                   :gen (jepsen.generator.Stagger
                         {:dt 20000000000,
                          :next-time nil,
                          :gen (jepsen.generator.FlipFlop
                                {:gens [#object[jepsen.nemesis.combined$partition_package$start__16420
                                                "0x34d776eb"
                                                "jepsen.nemesis.combined$partition_package$start__16420@34d776eb"]
                                        ({:type :info,
                                          :f :stop-partition,
                                          :value nil}
                                         {:type :info,
                                          :f :stop-partition,
                                          :value nil}
                                         {:type :info,
                                          :f :stop-partition,
                                          :value nil}
                                         {:type :info,
                                          :f :stop-partition,
                                          :value nil}
                                         {:type :info,
                                          :f :stop-partition,
                                          :value nil}
                                         {:type :info,
                                          :f :stop-partition,
                                          :value nil}
                                         {:type :info,
                                          :f :stop-partition,
                                          :value nil}
                                         {:type :info,
                                          :f :stop-partition,
                                          :value nil}
                                         ...)],
                                 :i 0})})})
                 (jepsen.generator.OnThreads
                  {:f #jepsen.generator.context.AllBut{:element :nemesis},
                   :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__9167
                                           "0x17734113"
                                           "jepsen.generator.context$make_thread_filter$lazy_filter__9167@17734113"],
                   :gen (jepsen.generator.Stagger
                         {:dt 2000000,
                          :next-time nil,
                          :gen (jepsen.generator.Repeat
                                {:remaining -1, :gen {:f :generate}})})})]})})
 :log-net-recv false
 :os
 #object[maelstrom.net$jepsen_os$reify__15254
         "0x27aa700"
         "maelstrom.net$jepsen_os$reify__15254@27aa700"]
 :time-limit 30
 :workload :unique-ids
 :consistency-models [:strict-serializable]
 :topology :grid}

2024-02-25 21:51:57,777{GMT}	INFO	[jepsen node n0] maelstrom.net: Starting Maelstrom network
2024-02-25 21:51:57,778{GMT}	INFO	[jepsen test runner] jepsen.db: Tearing down DB
2024-02-25 21:51:57,779{GMT}	INFO	[jepsen test runner] jepsen.db: Setting up DB
2024-02-25 21:51:57,780{GMT}	INFO	[jepsen node n2] maelstrom.db: Setting up n2
2024-02-25 21:51:57,780{GMT}	INFO	[jepsen node n1] maelstrom.db: Setting up n1
2024-02-25 21:51:57,781{GMT}	INFO	[jepsen node n2] maelstrom.process: launching /Users/aca123321/go/bin/unique-id-generation []
2024-02-25 21:51:57,781{GMT}	INFO	[jepsen node n1] maelstrom.process: launching /Users/aca123321/go/bin/unique-id-generation []
2024-02-25 21:51:57,782{GMT}	INFO	[jepsen node n0] maelstrom.service: Starting services: (lin-kv lin-tso lww-kv seq-kv)
2024-02-25 21:51:57,784{GMT}	INFO	[jepsen node n0] maelstrom.db: Setting up n0
2024-02-25 21:51:57,784{GMT}	INFO	[jepsen node n0] maelstrom.process: launching /Users/aca123321/go/bin/unique-id-generation []
2024-02-25 21:51:58,220{GMT}	INFO	[jepsen test runner] jepsen.core: Relative time begins now
2024-02-25 21:51:58,239{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:generate	nil
2024-02-25 21:51:58,239{GMT}	INFO	[jepsen worker nemesis] jepsen.util: :nemesis	:info	:start-partition	:one
2024-02-25 21:51:58,239{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:generate	nil
2024-02-25 21:51:58,242{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:generate	nil
2024-02-25 21:51:58,246{GMT}	INFO	[jepsen worker nemesis] jepsen.util: :nemesis	:info	:start-partition	[:isolated {"n1" #{"n2" "n0"}, "n2" #{"n1"}, "n0" #{"n1"}}]
2024-02-25 21:52:03,251{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:info	:generate	nil	:net-timeout
2024-02-25 21:52:03,251{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:info	:generate	nil	:net-timeout
2024-02-25 21:52:03,251{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:info	:generate	nil	:net-timeout
2024-02-25 21:52:03,255{GMT}	INFO	[jepsen worker 2] jepsen.util: 5	:invoke	:generate	nil
2024-02-25 21:52:03,255{GMT}	INFO	[jepsen worker 0] jepsen.util: 3	:invoke	:generate	nil
2024-02-25 21:52:03,255{GMT}	INFO	[jepsen worker 1] jepsen.util: 4	:invoke	:generate	nil
2024-02-25 21:52:08,263{GMT}	INFO	[jepsen worker 0] jepsen.util: 3	:info	:generate	nil	:net-timeout
2024-02-25 21:52:08,263{GMT}	INFO	[jepsen worker 1] jepsen.util: 4	:info	:generate	nil	:net-timeout
2024-02-25 21:52:08,263{GMT}	INFO	[jepsen worker 2] jepsen.util: 5	:info	:generate	nil	:net-timeout
2024-02-25 21:52:08,264{GMT}	INFO	[jepsen worker 0] jepsen.util: 6	:invoke	:generate	nil
2024-02-25 21:52:08,266{GMT}	INFO	[jepsen worker 1] jepsen.util: 7	:invoke	:generate	nil
2024-02-25 21:52:08,267{GMT}	INFO	[jepsen worker 2] jepsen.util: 8	:invoke	:generate	nil
2024-02-25 21:52:13,266{GMT}	INFO	[jepsen worker 0] jepsen.util: 6	:info	:generate	nil	:net-timeout
2024-02-25 21:52:13,267{GMT}	INFO	[jepsen worker 0] jepsen.util: 9	:invoke	:generate	nil
2024-02-25 21:52:13,273{GMT}	INFO	[jepsen worker 1] jepsen.util: 7	:info	:generate	nil	:net-timeout
2024-02-25 21:52:13,273{GMT}	INFO	[jepsen worker 1] jepsen.util: 10	:invoke	:generate	nil
2024-02-25 21:52:13,273{GMT}	INFO	[jepsen worker 2] jepsen.util: 8	:info	:generate	nil	:net-timeout
2024-02-25 21:52:13,274{GMT}	INFO	[jepsen worker 2] jepsen.util: 11	:invoke	:generate	nil
2024-02-25 21:52:16,169{GMT}	INFO	[jepsen worker nemesis] jepsen.util: :nemesis	:info	:stop-partition	nil
2024-02-25 21:52:16,170{GMT}	INFO	[jepsen worker nemesis] jepsen.util: :nemesis	:info	:stop-partition	:network-healed
2024-02-25 21:52:18,275{GMT}	INFO	[jepsen worker 1] jepsen.util: 10	:info	:generate	nil	:net-timeout
2024-02-25 21:52:18,275{GMT}	INFO	[jepsen worker 0] jepsen.util: 9	:info	:generate	nil	:net-timeout
2024-02-25 21:52:18,277{GMT}	INFO	[jepsen worker 0] jepsen.util: 12	:invoke	:generate	nil
2024-02-25 21:52:18,279{GMT}	INFO	[jepsen worker 1] jepsen.util: 13	:invoke	:generate	nil
2024-02-25 21:52:18,284{GMT}	INFO	[jepsen worker 2] jepsen.util: 11	:info	:generate	nil	:net-timeout
2024-02-25 21:52:18,287{GMT}	INFO	[jepsen worker 2] jepsen.util: 14	:invoke	:generate	nil
2024-02-25 21:52:23,285{GMT}	INFO	[jepsen worker 0] jepsen.util: 12	:info	:generate	nil	:net-timeout
2024-02-25 21:52:23,286{GMT}	INFO	[jepsen worker 0] jepsen.util: 15	:invoke	:generate	nil
2024-02-25 21:52:23,288{GMT}	INFO	[jepsen worker 1] jepsen.util: 13	:info	:generate	nil	:net-timeout
2024-02-25 21:52:23,289{GMT}	INFO	[jepsen worker 1] jepsen.util: 16	:invoke	:generate	nil
2024-02-25 21:52:23,297{GMT}	INFO	[jepsen worker 2] jepsen.util: 14	:info	:generate	nil	:net-timeout
2024-02-25 21:52:23,297{GMT}	INFO	[jepsen worker 2] jepsen.util: 17	:invoke	:generate	nil
2024-02-25 21:52:28,299{GMT}	INFO	[jepsen worker 0] jepsen.util: 15	:info	:generate	nil	:net-timeout
2024-02-25 21:52:28,299{GMT}	INFO	[jepsen worker 1] jepsen.util: 16	:info	:generate	nil	:net-timeout
2024-02-25 21:52:28,299{GMT}	INFO	[jepsen worker 2] jepsen.util: 17	:info	:generate	nil	:net-timeout
2024-02-25 21:52:28,336{GMT}	INFO	[jepsen test runner] jepsen.core: Run complete, writing
2024-02-25 21:52:28,389{GMT}	INFO	[jepsen node n1] maelstrom.db: Tearing down n1
2024-02-25 21:52:28,389{GMT}	INFO	[jepsen node n0] maelstrom.db: Tearing down n0
2024-02-25 21:52:28,389{GMT}	INFO	[jepsen node n2] maelstrom.db: Tearing down n2
2024-02-25 21:52:29,330{GMT}	INFO	[jepsen node n0] maelstrom.net: Shutting down Maelstrom network
2024-02-25 21:52:29,332{GMT}	WARN	[jepsen test runner] jepsen.core: Test crashed!
clojure.lang.ExceptionInfo: Node n2 crashed with exit status 2. Before crashing, it wrote to STDOUT:

{"src":"n2","dest":"c0","body":{"in_reply_to":1,"type":"init_ok"}}

And to STDERR:

panic: assignment to entry in nil map

goroutine 19 [running]:
main.main.func1({{0xc00009e308, 0x2}, {0xc00009e30a, 0x2}, {0xc0000be040, 0x1e, 0x20}})
	/Users/aca123321/Desktop/Personal/Fly io distriibuted systems challenges/unique-id-generation/main.go:40 +0x13a
github.com/jepsen-io/maelstrom/demo/go.(*Node).handleMessage(0xc0000b8000, 0x0?, {{0xc00009e308, 0x2}, {0xc00009e30a, 0x2}, {0xc0000be040, 0x1e, 0x20}})
	/Users/aca123321/go/pkg/mod/github.com/jepsen-io/maelstrom/demo/go@v0.0.0-20231231190402-2674df7c1076/node.go:151 +0x8d
github.com/jepsen-io/maelstrom/demo/go.(*Node).Run.func2()
	/Users/aca123321/go/pkg/mod/github.com/jepsen-io/maelstrom/demo/go@v0.0.0-20231231190402-2674df7c1076/node.go:129 +0x7d
created by github.com/jepsen-io/maelstrom/demo/go.(*Node).Run in goroutine 1
	/Users/aca123321/go/pkg/mod/github.com/jepsen-io/maelstrom/demo/go@v0.0.0-20231231190402-2674df7c1076/node.go:127 +0x4f8

Full STDERR logs are available in /Users/aca123321/Desktop/Personal/Fly io distriibuted systems challenges/maelstrom/store/unique-ids/20240225T215155.960+0530/node-logs/n2.log
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.process$stop_node_BANG_.invokeStatic(process.clj:239)
	at maelstrom.process$stop_node_BANG_.invoke(process.clj:217)
	at maelstrom.db$db$reify__16142.teardown_BANG_(db.clj:75)
	at jepsen.db$fn__8744$G__8725__8748.invoke(db.clj:12)
	at jepsen.db$fn__8744$G__8724__8753.invoke(db.clj:12)
	at clojure.core$partial$fn__5908.invoke(core.clj:2642)
	at jepsen.control$on_nodes$fn__8599.invoke(control.clj:314)
	at clojure.lang.AFn.applyToHelper(AFn.java:154)
	at clojure.lang.AFn.applyTo(AFn.java:144)
	at clojure.core$apply.invokeStatic(core.clj:667)
	at clojure.core$with_bindings_STAR_.invokeStatic(core.clj:1990)
	at clojure.core$with_bindings_STAR_.doInvoke(core.clj:1990)
	at clojure.lang.RestFn.applyTo(RestFn.java:142)
	at clojure.core$apply.invokeStatic(core.clj:671)
	at clojure.core$bound_fn_STAR_$fn__5818.doInvoke(core.clj:2020)
	at clojure.lang.RestFn.invoke(RestFn.java:408)
	at dom_top.core$real_pmap_helper$build_thread__211$fn__212.invoke(core.clj:163)
	at clojure.lang.AFn.applyToHelper(AFn.java:152)
	at clojure.lang.AFn.applyTo(AFn.java:144)
	at clojure.core$apply.invokeStatic(core.clj:667)
	at clojure.core$with_bindings_STAR_.invokeStatic(core.clj:1990)
	at clojure.core$with_bindings_STAR_.doInvoke(core.clj:1990)
	at clojure.lang.RestFn.invoke(RestFn.java:425)
	at clojure.lang.AFn.applyToHelper(AFn.java:156)
	at clojure.lang.RestFn.applyTo(RestFn.java:132)
	at clojure.core$apply.invokeStatic(core.clj:671)
	at clojure.core$bound_fn_STAR_$fn__5818.doInvoke(core.clj:2020)
	at clojure.lang.RestFn.invoke(RestFn.java:397)
	at clojure.lang.AFn.run(AFn.java:22)
	at java.base/java.lang.Thread.run(Thread.java:1583)
